df.head()
View(df)
df.head()
head(df)
df %>%
select(gender, mass, height, species)
df %>%
select(gender, mass, height, species) %>%
filter(species == "Human")
df %>%
select(gender, mass, height, species) %>%
filter(species == "Human") %>%
na.omit() %>%
mutate(height = height/100)
df %>%
select(gender, mass, height, species) %>%
filter(species == "Human") %>%
na.omit() %>%
mutate(height = height/100) %>%
mutate(BMI = mass / height ^2)
df %>%
select(gender, mass, height, species) %>%
filter(species == "Human") %>%
na.omit() %>%
mutate(height = height/100) %>%
mutate(BMI = mass / height ^2) %>%
group_by(gender) %>%
summarise(Average_BMI = mean(BMI))
library(tidyverse)
df<- read_xlsx("friends.xlsx")
str(df)
heaad(df)
head(df)
df <- df %>%
mutate(height_category = case_when(
height < 1.60 ~ "Short",
height >= 1.60 & height < 1.80 ~ "Medium",
height >= 1.80 ~ "Tall"
))
library(tidyverse)
df<- read_xlsx("friends.xlsx")
head(df)
# str shows the data types in your file
str(df)
# chr = character, or string. We need the height data to be in order, or ordinal (factor)
# first lets create the height categories
df <- df %>%
mutate(height_category = case_when(
height < 1.60 ~ "Short",
height >= 1.60 & height < 1.80 ~ "Medium",
height >= 1.80 ~ "Tall"
))
df <- df %>%
mutate(height_category = case_when(
Height < 1.60 ~ "Short",
Height >= 1.60 & Height < 1.80 ~ "Medium",
Height >= 1.80 ~ "Tall"
))
head(df)
as.factor(df$Age)
str(df)
df$Age <- as.factor(df$Age)
str(df)
library(tidyverse)
df<- read_xlsx("friends.xlsx")
head(df)
str(df)
df <- df %>%
mutate(height_category = case_when(
Height < 1.60 ~ "Short",
Height >= 1.60 & Height < 1.80 ~ "Medium",
Height >= 1.80 ~ "Tall"
))
df$height_category <- as.factor(df$height_category)
str(df)
library(tidyverse)
df<- read_xlsx("friends.xlsx")
head(df)
str(df)
min(df$Height)
omit_na(min(df$Height))
range(df$Height)
plot(df$Height)
library(tidyverse)
df<- read_xlsx("friends.xlsx")
head(df)
# str shows the data types in your file
str(df)
plot(df$Height)
# TASKS:
# we want age to be an integer, height & weight can remain numeric
# chr = character, or string. We need the height data to be in order, or ordinal (factor)
# first lets create the height categories
df <- df %>%
mutate(height_category = case_when(
Height < 1.78 ~ "Short",
Height >= 1.78 & Height < 1.80 ~ "Medium",
Height >= 1.80 ~ "Tall"
))
df$height_category <- as.factor(df$height_category)
str(df)
df$Age <- as.integer(df$Age)
str(df)
plot(df$Height)
levels(df$height_category)
df$height_category <- factor(df$height_category,
levels = c("Short", "Medium", "Tall"))
str(df)
# Logical Variables
df$old <- df$Age > 23
head(df)
class(df$old)
library(tidyverse)
library(tidyverse)
df<- read_xlsx("friends.xlsx")
library(tidyverse)
df<- read_xlsx("/data/friends.xlsx")
library(tidyverse)
df<- read_xlsx("./data/friends.xlsx")
head(df)
# str shows the data types in your file
str(df)
# TASKS:
# we want age to be an integer, height & weight can remain numeric (Numeric / Integer)
# chr = character, or string. We need the height data to be in order, or ordinal (factor)
# first lets create the height categories
df <- df %>%
mutate(height_category = case_when(
Height < 1.78 ~ "Short",
Height >= 1.78 & Height < 1.80 ~ "Medium",
Height >= 1.80 ~ "Tall"
))
df$height_category <- as.factor(df$height_category)
df$Age <- as.integer(df$Age)
# change levels to be in order, not alphabetical
levels(df$height_category)
df$height_category <- factor(df$height_category,
levels = c("Short", "Medium", "Tall"))
# Logical Variables
df$old <- df$Age > 23
.libpaths()
.libPaths()
path <- file.path(Sys.getenv("USERPROFILE"), "R", "win-library", R.version$major, R.version$minor)
dir.create(path, recursive = TRUE, showWarnings = FALSE)
file.edit("~/.Rprofile")
library(tidyverse)
library(ggpmisc)
df <- read.csv('./data/HousePrices.csv')
head(df)
tail(df)
summary(df)
View(df)
#plot(df$area, df$price)
ggplot(df, aes(x = area, y = price)) +
geom_point() +
geom_smooth(method="lm", se=FALSE, color="red") +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
formula = y ~ x,
parse = TRUE) +
labs(title = "Scatterplot of Area vs Price",
x = "Area (sq ft)",
y = "Price ($)") +
theme_minimal()
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, height, mass, hair_color)
head(data)
head(data)
head(data)
data <- data %>%
select(name, height, mass, hair_color) %>%
rename(weight = mass)
head(data)
data <- data %>%
select(name, mass, height, hair_color) %>%
rename(weight = mass)
data <- starwars
data <- data %>%
select(name, mass, height, hair_color) %>%
rename(weight = mass)
head(data)
data <- starwars
head(data)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass)
head(data)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female")) %>%
ggplot(weight, height, aes(colour = "red"))+
geom_point()
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female")) %>%
ggplot(mass, height, aes(colour = "red"))+
geom_point()
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female")) %>%
ggplot(aes(mass, height))+
geom_point()
ggplot(data, aes(mass, height))+
geom_point()
ggplot(data=data, aes(mass, height))+
geom_point()
plot <- data %>%
ggplot(aes(x = mass, y = height)) +
geom_point(color = "blue") +  # Scatter plot points
labs(title = "Scatter Plot of Mass vs. Height",
x = "Mass (kg)",
y = "Height (cm)") +
theme_minimal()
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female")) %>%
# Create scatter plot using pipes
plot <- data %>%
ggplot(aes(x = mass, y = height)) +
geom_point(color = "blue") +  # Scatter plot points
labs(title = "Scatter Plot of Mass vs. Height",
x = "Mass (kg)",
y = "Height (cm)") +
theme_minimal()
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
# Create scatter plot using pipes
plot <- data %>%
ggplot(aes(x = mass, y = height)) +
geom_point(color = "blue") +  # Scatter plot points
labs(title = "Scatter Plot of Mass vs. Height",
x = "Mass (kg)",
y = "Height (cm)") +
theme_minimal()
# Explicitly print the plot
print(plot)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
plot(data$height, data$weight)
max(data$weight)
data <- na.omit(data$weight, data$height)
plot(data$height, data$weight)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
plot(data$height, data$weight)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
filter(mass < 400) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
filter(mass < 400) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
plot(data$height, data$weight)
library(tidyverse)
data <- starwars
head(data)
data <- data %>%
select(name, gender, mass, height, hair_color) %>%
filter(mass < 400) %>%
rename(weight = mass) %>%
mutate(gender = recode(gender, "masculine" = "male", "feminine" = "female"))
head(data)
plot(data$height, data$weight)
library(tidyverse)
data <- starwars
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100)
View(sw)
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine")
View(sw)
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine") %>%  # gender %in% c("masculine", "feminine")
mutate(gender, recode(gender,
masculine = "m",
feminine = "f"))
View(sw)
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine") %>%  # gender %in% c("masculine", "feminine")
mutate(gender = recode(gender,
masculine = "m",
feminine = "f"))
View(sw)
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine") %>%  # gender %in% c("masculine", "feminine")
mutate(gender = recode(gender,
masculine = "m",
feminine = "f")) %>%
mutate(size = height > 1 & weight > 75,
size = ifelse(size == True, "big", "small"))
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine") %>%  # gender %in% c("masculine", "feminine")
mutate(gender = recode(gender,
masculine = "m",
feminine = "f")) %>%
mutate(size = height > 1 & weight > 75,
size = if_else(size == True, "big", "small"))
sw <- data %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height/100) %>%
filter(gender == "masculine" | gender == "feminine") %>%  # gender %in% c("masculine", "feminine")
mutate(gender = recode(gender,
masculine = "m",
feminine = "f")) %>%
mutate(size = height > 1 & weight > 75,
size = if_else(size == TRUE, "big", "small"))
View(sw)
library(tidyverse)
df <- msleep
df <- msleep
head(df)
df %>%
select(name, sleep) %>%
filter(sleep > 18)
df <- df %>%
select(name, sleep) %>%
filter(sleep > 18)
View(df)
df <- df %>%
select(name, sleep_total) %>%
filter(sleep_total > 18)
View(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
View(df)
library(tidyverse)
df <- msleep
head(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
View(df)
my_data <- msleep %>%
select(name, order, bodywt, sleep_total) %>%
filter(order == "Primates", bodywt > 20)
View(my_data)
library(tidyverse)
df <- msleep
head(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
my_data <- msleep %>%
select(name, order, bodywt, sleep_total) %>%
filter(order == "Primates" & bodywt > 20)
library(tidyverse)
df <- msleep
head(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
my_data <- msleep %>%
select(name, order, bodywt, sleep_total) %>%
filter(order == "Primates" & bodywt > 20)
View(my_data)
library(tidyverse)
df <- msleep
head(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
my_data <- msleep %>%
select(name, order, bodywt, sleep_total) %>%
filter(order == "Primates" | bodywt > 20)
View(my_data)
my_data2 <- msleep %>%
select(name, sleep_total) %>%
filter(name %in% c("cow", "dog", "horse"))
View(my_data2)
my_data2 <- msleep %>%
select(name, sleep_total) %>%
filter(name %in% c("Cow", "Dog", "Horse"))
View(my_data2)
View(my_data2)
View(df)
View(df)
# Select the top 5 by sleep_total
top5 <- df %>%
arrange(desc(sleep_total)) %>%
slice_head(n = 5)
# Create the bar chart
ggplot(top5, aes(x = reorder(name, sleep_total), y = sleep_total, fill = name)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
labs(title = "Top 5 Animals by Sleep Total", x = "Animal", y = "Total Sleep (hours)") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since color is redundant
library(tidyverse)
df <- msleep
head(df)
df <- df %>%
select(name, sleep_total) %>%
filter(!sleep_total > 18)
my_data <- msleep %>%
select(name, order, bodywt, sleep_total) %>%
filter(order == "Primates" | bodywt > 20) # you can use , instead of & - use | for "or
my_data2 <- msleep %>%
select(name, sleep_total) %>%
filter(name %in% c("Cow", "Dog", "Horse"))
# filter usnig "between"
my_data3 <- msleep %>%
select(name, sleep_total) %>%
filter(between(sleep_total, 16, 18))
View(my_data3)
# filter using "near"
my_data4 <- msleep %>%
select(name, sleep_total) %>%
filter(near(sleep_total, 17, tol=18))
View(my_data4)
# filter using "near"
my_data4 <- msleep %>%
select(name, sleep_total) %>%
filter(near(sleep_total, 17, tol=0.5))
View(my_data4)
# filter using presence of "na"
my_data5 <- msleep %>%
select(name, conservation, sleep_total) %>%
filter(is.na(conservation))
View(my_data5)
# filter using presence of "na"
my_data5 <- msleep %>%
select(name, conservation, sleep_total) %>%
filter(!is.na(conservation))
View(my_data5)
