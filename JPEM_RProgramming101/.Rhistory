": ",
Sepal.Length,
" cm")) %>%
head(10)
mtcars %>%
rownames_to_column(var = "model") %>%
mutate(has_M = str_detect(model, "M")) %>%
filter(has_M == TRUE) %>%
select(model, mpg, cyl, disp) %>%
head(10)
mtcars %>%
rownames_to_column(var = "model") %>%
mutate('short_name' =
str_sub(model, 1, 3)) %>%
filter(has_M == TRUE) %>%
select(model, 'short_name', mpg, cyl, disp) %>%
head(10)
mtcars %>%
rownames_to_column(var = "model") %>%
mutate('short_name' =
str_sub(model, 1, 3)) %>%
select(model, 'short_name', mpg, cyl, disp) %>%
head(10)
starwars %>%
select(name, species) %>%
mutate(species = str_to_upper(species)) %>%
head(10)
#| echo: true
#| message: false
#| warning: false
mpg %>%
ggplot(aes(class, hwy)) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) +  # Show mean
stat_summary(fun = median, geom = "point", color = "blue", size = 3) +  # Show median
theme_minimal() +
labs(colour = "statistic")
#| echo: true
#| message: false
#| warning: false
mpg %>%
ggplot(aes(class, hwy)) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) +  # Show mean
stat_summary(fun = median, geom = "point", color = "blue", size = 3) +  # Show median
theme_minimal() +
labs(colour = "Statistic")
#| message: false
#| warning: false
#| include: false
library(tidyverse)
#| echo: true
#| message: false
#| warning: false
mpg %>%
ggplot(aes(class, hwy)) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) +  # Show mean
stat_summary(fun = median, geom = "point", color = "blue", size = 3) +  # Show median
theme_minimal() +
labs(colour = "Statistic")
#| echo: true
#| message: false
#| warning: false
mpg %>%
ggplot(aes(class, hwy)) +
geom_boxplot() +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) +
theme_minimal()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point(alpha = 0.5) +
facet_wrap(~ cut) +
labs(title = "Price vs. Carat faceted by Cut", x = "Carat", y = "Price") +
theme_minimal()
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.5) +
facet_wrap(~ cut) +
labs(title = "Price vs. Carat faceted by Cut", x = "Carat", y = "Price") +
theme_minimal()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(alpha = 0.5) +
facet_grid(drv ~ cyl) +
labs(title = "Highway Mileage vs. Engine Displacement", x = "Displacement", y = "Highway MPG") +
theme_minimal()
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(alpha = 0.7) +
facet_wrap(~ species) +
labs(title = "Penguin Body Mass vs. Flipper Length", x = "Flipper Length (mm)", y = "Body Mass (g)") +
theme_minimal()
library(palmerpenguins)
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(alpha = 0.7) +
facet_wrap(~ species) +
labs(title = "Penguin Body Mass vs. Flipper Length", x = "Flipper Length (mm)", y = "Body Mass (g)") +
theme_minimal()
#| message: false
#| warning: false
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(alpha = 0.7) +
facet_wrap(~ species) +
labs(title = "Penguin Body Mass vs. Flipper Length", x = "Flipper Length (mm)", y = "Body Mass (g)") +
theme_minimal()
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point(alpha = 0.7) +
facet_grid(am ~ cyl) +
labs(title = "Miles per Gallon vs. Horsepower", x = "Horsepower", y = "MPG") +
theme_minimal()
msleep %>%
filter(!is.na(vore) & !is.na(conservation)) %>%
ggplot(aes(sleep_total, brainwt)) +
geom_point(alpha = 0.7) +
facet_grid(vore ~ conservation) +
labs(title = "Sleep vs. Brain Weight in Mammals", x = "Total Sleep (hours)", y = "Brain Weight (kg)") +
theme_minimal()
ggplot(gss_cat, aes(x = fct_rev(marital), fill = partyid)) +
geom_bar(position = "fill") +
facet_grid(. ~ degree) +
labs(title = "Marital Status vs. Political Affiliation", x = "Marital Status", y = "Proportion", fill = "Party ID") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gapminder_clean <- gapminder %>%
mutate(decade = floor(year / 10) * 10)
ggplot(gapminder_clean, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.7) +
facet_grid(continent ~ decade) +
labs(title = "Economic Growth vs. Life Expectancy by Continent and Decade",
x = "GDP per Capita", y = "Life Expectancy") +
theme_minimal()
library(gapminder)
gapminder_clean <- gapminder %>%
mutate(decade = floor(year / 10) * 10)
ggplot(gapminder_clean, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.7) +
facet_grid(continent ~ decade) +
labs(title = "Economic Growth vs. Life Expectancy by Continent and Decade",
x = "GDP per Capita", y = "Life Expectancy") +
theme_minimal()
library(nycflights13)
flights_clean <- flights %>%
filter(!is.na(arr_delay), !is.na(dep_time)) %>%
mutate(carrier = factor(carrier))
ggplot(flights_clean, aes(x = dep_time, y = arr_delay)) +
geom_point(alpha = 0.5) +
facet_grid(carrier ~ origin) +
labs(title = "Flight Arrival Delays vs. Departure Time by Airline & Airport",
x = "Departure Time", y = "Arrival Delay (mins)") +
theme_minimal()
library(Lahman)
install.packages("Lahman")
library(Lahman)
batting_clean <- Batting %>%
filter(yearID >= 1960) %>%
mutate(decade = floor(yearID / 10) * 10)
ggplot(batting_clean, aes(x = HR, y = BA)) +
geom_point(alpha = 0.5) +
facet_grid(lgID ~ decade) +
labs(title = "Home Runs vs. Batting Average by League & Decade",
x = "Home Runs", y = "Batting Average") +
theme_minimal()
library(Lahman)
batting_clean <- Batting %>%
filter(yearID >= 1960) %>%
mutate(decade = floor(yearID / 10) * 10)
ggplot(batting_clean, aes(x = HR, y = BA)) +
geom_point(alpha = 0.5) +
facet_grid(lgID ~ decade) +
labs(title = "Home Runs vs. Batting Average by League & Decade",
x = "Home Runs", y = "Batting Average") +
theme_minimal()
iris_clean <- iris %>%
mutate(sepal_width_cat = cut(Sepal.Width, breaks = 3, labels = c("Narrow", "Medium", "Wide")))
ggplot(iris_clean, aes(x = Petal.Length, y = Petal.Width)) +
geom_point(alpha = 0.7) +
facet_grid(Species ~ sepal_width_cat) +
labs(title = "Petal Dimensions by Species and Sepal Width",
x = "Petal Length", y = "Petal Width") +
theme_minimal()
library(ggplot2movies)
movies_clean <- movies %>%
mutate(decade = floor(year / 10) * 10)
ggplot(movies_clean, aes(x = runtime, y = rating)) +
geom_point(alpha = 0.5) +
facet_grid(mpaa ~ decade) +
labs(title = "Movie Ratings vs. Runtime by MPAA Rating & Decade",
x = "Runtime (mins)", y = "IMDb Rating") +
theme_minimal()
install.packages("ggplot2movies")
library(ggplot2movies)
movies_clean <- movies %>%
mutate(decade = floor(year / 10) * 10)
ggplot(movies_clean, aes(x = runtime, y = rating)) +
geom_point(alpha = 0.5) +
facet_grid(mpaa ~ decade) +
labs(title = "Movie Ratings vs. Runtime by MPAA Rating & Decade",
x = "Runtime (mins)", y = "IMDb Rating") +
theme_minimal()
ggplot(mpg, aes(cty, hwy)) +
geom_point() +
facet_grid(year ~ drv, axes = "all", axis.labels = "all_x")
ggplot(mpg, aes(cty, hwy)) +
geom_point() +
facet_grid(year ~ drv, axes = "all", axis.labels = "all_x") +
theme_minimal()
mpg %>%
ggplot(aes(cty, hwy)) +
geom_point() +
facet_grid(year ~ drv, axes = "all", axis.labels = "all_x") +
theme_minimal()
#| message: false
#| warning: false
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(alpha = 0.7) +
facet_wrap(~species) +
labs(title = "Penguin Body Mass vs. Flipper Length", x = "Flipper Length (mm)", y = "Body Mass (g)") +
theme_minimal()
mpg %>%
ggplot(aes(cty, hwy)) +
geom_point() +
facet_grid(year ~ drv, axes = "all", axis.labels = "all_x") +
labs(
title = "City and Highway Mileage 1999 vs 2008"
)
theme_minimal()
mpg %>%
ggplot(aes(cty, hwy)) +
geom_point() +
facet_grid(year ~ drv, axes = "all", axis.labels = "all_x") +
labs(
title = "City and Highway Mileage 1999 vs 2008"
) +
theme_minimal()
msleep %>%
filter(!is.na(vore)) %>%
ggplot(msleep_clean, aes(x = reorder(name, sleep_total), y = sleep_total, fill = vore)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Total Sleep Time by Mammal Species",
x = "Species",
y = "Total Sleep (hours)",
fill = "Diet Type") +
theme_minimal()
msleep %>%
filter(!is.na(vore)) %>%
ggplot(aes(x = reorder(name, sleep_total), y = sleep_total, fill = vore)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Total Sleep Time by Mammal Species",
x = "Species",
y = "Total Sleep (hours)",
fill = "Diet Type") +
theme_minimal()
gapminder %>%
filter(year == max(year)) %>%
ggplot(aes(x = reorder(country, lifeExp), y = lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Life Expectancy by Country (Most Recent Year)",
x = "Country",
y = "Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder_summary <- gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp))
ggplot(gapminder_summary, aes(x = reorder(continent, avg_lifeExp), y = avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Average Life Expectancy by Continent (Most Recent Year)",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder_summary <- gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp))
ggplot(gapminder_summary, aes(x = reorder(continent, avg_lifeExp), y = avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
#coord_flip() +
labs(title = "Average Life Expectancy by Continent (Most Recent Year)",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp)) %>%
ggplot(aes(reorder(continent, avg_lifeExp), avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
#coord_flip() +
labs(title = "Average Life Expectancy by Continent (Most Recent Year)",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp)) %>%
ggplot(aes(reorder(continent, avg_lifeExp), avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Average Life Expectancy by Continent (Most Recent Year)",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp)) %>%
ggplot(aes(reorder(continent, avg_lifeExp), avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
#coord_flip() +
labs(title = "Average Life Expectancy by Continent (Most Recent Year)",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
gapminder %>%
filter(year == max(year)) %>%
group_by(continent) %>%
summarize(avg_lifeExp = mean(lifeExp)) %>%
ggplot(aes(reorder(continent, avg_lifeExp), avg_lifeExp, fill = continent)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Average Life Expectancy by Continent",
x = "Continent",
y = "Average Life Expectancy (years)",
fill = "Continent") +
theme_minimal()
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(plotly)
data(pima)
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(plotly)
data(pima)
install.packages("pdp")
library(pdp)
data("PimaIndiansDiabetes", package = "mlbench")
install.packages("mlbench")
data("PimaIndiansDiabetes", package = "mlbench")
summary(PimaIndiansDiabetes)
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(plotly)
PimaIndiansDiabetes
PimaIndiansDiabetes %>%
ggplot(aes(x = glucose, y = as.numeric(diabetes == "pos") * 0.5, color = diabetes)) +
geom_jitter(height = 0.2, width = 0.2, alpha = 0.3, size = 4) +
scale_color_manual(values = c("neg" = "darkgreen", "pos" = "red")) +
labs(
title = "Glucose Levels and Diabetes Status",
x = "Glucose Levels"
) +
scale_y_continuous(
breaks = c(0, 0.5),
labels = c("No Diabetes", "Diabetes")
) +
theme_minimal() +
theme(
legend.position = "none",
axis.line.x = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank()
)
library(gtExtras)
pima_tbl <- PimaIndiansDiabetes %>%
select(pregnant = pregnant,
glucose = glucose,
pressure = pressure,
triceps = triceps,
insulin = insulin,
mass = mass,
pedigree = pedigree,
age = age,
diabetes = diabetes) %>%
mutate(diabetes = ifelse(diabetes == "pos", "Positive", "Negative"))
# Create gt table
pima_tbl %>%
head(10) %>%  # display only first 10 rows for brevity
gt() %>%
tab_header(
title = "PimaIndiansDiabetes Dataset"
) %>%
gt_highlight_rows(
rows = diabetes == "Positive",
fill = "lightgreen"
) %>%
gt_highlight_rows(
rows = diabetes == "Negative",
fill = "mistyrose"
)
data("PimaIndiansDiabetes")
# Prepare and display the table
PimaIndiansDiabetes %>%
select(pregnant, glucose, pressure, triceps, insulin, mass, pedigree, age, diabetes) %>%
mutate(diabetes = ifelse(diabetes == "pos", "Positive", "Negative")) %>%
head(10) %>%  # showing just a sample for clarity
gt() %>%
tab_header(title = "PimaIndiansDiabetes Dataset") %>%
tab_style(
style = list(cell_fill(color = "lightgreen")),
locations = cells_body(
columns = diabetes,
rows = diabetes == "Positive"
)
) %>%
tab_style(
style = list(cell_fill(color = "mistyrose")),
locations = cells_body(
columns = diabetes,
rows = diabetes == "Negative"
)
)
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(plotly)
library(gtExtras)
library(mlbench)
library(tidyverse)
library(mtcars)
mtcars %>%
head(10)
plot(mpg, disp, data=mtcars)
plot(data=mtcars, mpg, disp)
mtcars %>%
ggplot(aes(disp, mpg)) +
geom_point()
mtcars %>%
ggplot(aes(disp, mpg)) +
geom_point() +
geom_smooth(methods = lm, se =F)
mtcars %>%
ggplot(aes(disp, mpg)) +
geom_point() +
geom_smooth(method = lm, se =F)
mt_model <- lm(mpg ~ disp, data = mtcars)
summary(model)
summary(mt_model)
mtcars$coeffients
mt_model$coeffients
mt_model$coefficients
mt_model[1]
mt_model$coefficients[1]
paste("y = ", mt_model$coefficients[2], "* x + ", mt_model$coefficients[0] )
paste("y = , mt_model$coefficients[2], * x + , mt_model$coefficients[0]")
paste("y =", mt_model$coefficients[2], "* x +", mt_model$coefficients[1])
setwd("C:/JPEM_Git_Main/JPEM/JPEM_RProgramming101")
CDC_LifeExpectancy <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA420/data/CDC_LifeExpectancy.csv")
CDC_LifeExpectancy <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA420/data/CDC_LifeExpectancy.csv")
head(CDC_LifeExpectancy)
CDC_LifeExpectancy %>%
ggplot(Year, `Average Life Expectancy (Years)`) +
geom_line()
head(CDC_LifeExpectancy)
CDC_LifeExpectancy %>%
ggplot(Year, `Average Life Expectancy (Years)`) +
geom_line()
CDC_LifeExpectancy <- rename(CDC_LifeExpectancy$Year, CDC_LifeExpectancy$Date)
head(CDC_LifeExpectancy)
CDC_LifeExpectancy <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA420/data/CDC_LifeExpectancy.csv")
View(CDC_LifeExpectancy)
head(CDC_LifeExpectancy)
CDC_LifeExpectancy %>%
ggplot(Year, `Average Life Expectancy (Years)`) +
geom_line()
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp)) +
geom_line()
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp)) +
geom_point()
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp)) +
geom_point(colour = Sex)
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp, colour = Sex)) +
geom_point()
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp, colour = Sex, shape = Race)) +
geom_point()
CDC_LifeExpectancy %>%
ggplot(aes(Year, LifeExp, colour = Sex, shape = Race)) +
geom_point() +
geom_line()
library(tidyverse)
set.seed(123)
sales_data <- tibble(
Date = sample(seq(as.Date('2022-01-01'), as.Date('2025-06-17'), by="day"), 1000, replace = TRUE),
Product = sample(c("Widget A", "Widget B", "Widget C", "Gadget X", "Tool Y"), 1000, replace = TRUE),
Region = sample(c("North", "South", "East", "West"), 1000, replace = TRUE),
Sales_Amount = round(runif(1000, 50, 500), 2),
Customer_Age = sample(18:70, 1000, replace = TRUE)
)
write_csv(sales_data, "sales_data.csv")
View(sales_data)
getwd()
