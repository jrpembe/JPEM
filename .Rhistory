#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 2.5, y = max(data$price) * 0.95, label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 2.5, y = max(data$price) * 0.90, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 2.5, y = max(data$price) * 0.85, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = max(data$price) * 0.95, label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = max(data$price) * 0.90, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = max(data$price) * 0.85, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = max(data$price) * 0.90, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = max(data$price) * 0.85, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.9e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "House Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "House Size vs Price",
x = "Size",
y = "Price"
) +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Fit linear model
model2 <- lm(price ~ size, data = data)
summary_model2 <- summary(model2)
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "House Size vs Price",
x = "Size",
y = "Price"
) +
theme(plot.title = element_text(hjust = 0.85)) +
theme_bw()
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
# Load dataset
data <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA415/02 Multiple Regression/student_grades.csv")
# Drop categorical columns
data <- subset(data, select = -c(Location_Type, Tutoring_Access))
# Fit multiple regression model
model <- lm(Grade ~ ., data = data)  # Grade is the dependent variable
# Load dataset
data <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA415/02 Multiple Regression/student_grades.csv")
# Drop categorical columns
data <- subset(data, select = -c(Location_Type, Tutoring_Access))
# Fit multiple regression model
model <- lm(Performance_Score ~ Study_Hours + Sleep_Hours, data = data)
# Display model summary
summary(model)
#| label: Create Model - Test Performance
#| echo: true
#| message: false
#| warning: false
# Load dataset
data <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA415/02 Multiple Regression/student_grades.csv")
# Drop categorical columns
data <- subset(data, select = -c(Location_Type, Tutoring_Access))
# Fit multiple regression model
model <- lm(Performance_Score ~ Study_Hours + Sleep_Hours, data = data)
# Display model summary
summary(model)
library(plotly)
plot_ly(data, x = ~Study_Hours, y = ~Sleep_Hours, z = ~Performance_Score) %>%
add_markers() %>%
layout(
title = "3D Scatter Plot: Performance vs. Study & Sleep Hours",
scene = list(
xaxis = list(title = "Study Hours"),
yaxis = list(title = "Sleep Hours"),
zaxis = list(title = "Performance Score")
)
)
library(ggplot2)
ggplot(data, aes(x = Study_Hours, y = Sleep_Hours, fill = Performance_Score)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Contour Plot: Performance Based on Study & Sleep Hours",
x = "Study Hours",
y = "Sleep Hours",
fill = "Performance Score") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Create a grid of Study_Hours and Sleep_Hours
study_seq <- seq(min(data$Study_Hours), max(data$Study_Hours), length.out = 100)
sleep_seq <- seq(min(data$Sleep_Hours), max(data$Sleep_Hours), length.out = 100)
grid <- expand.grid(Study_Hours = study_seq, Sleep_Hours = sleep_seq)
# Fit model and make predictions
model <- lm(Performance_Score ~ Study_Hours + Sleep_Hours, data = data)
grid$Predicted_Score <- predict(model, newdata = grid)
# Generate heatmap
ggplot(grid, aes(x = Study_Hours, y = Sleep_Hours, fill = Predicted_Score)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Heatmap: Predicted Performance Score",
x = "Study Hours",
y = "Sleep Hours",
fill = "Performance Score") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Create a grid of Study_Hours and Sleep_Hours
study_seq <- seq(min(data$Study_Hours), max(data$Study_Hours), length.out = 100)
sleep_seq <- seq(min(data$Sleep_Hours), max(data$Sleep_Hours), length.out = 100)
grid <- expand.grid(Study_Hours = study_seq, Sleep_Hours = sleep_seq)
# Fit model and make predictions
model <- lm(Performance_Score ~ Study_Hours + Sleep_Hours, data = data)
grid$Predicted_Score <- predict(model, newdata = grid)
# Generate heatmap
ggplot(grid, aes(x = Study_Hours, y = Sleep_Hours, fill = Predicted_Score)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Predicted Performance Score",
x = "Study Hours",
y = "Sleep Hours",
fill = "Performance Score") +
theme_minimal()
# Create a grid of Study_Hours and Sleep_Hours
study_seq <- seq(min(data$Study_Hours), max(data$Study_Hours), length.out = 100)
sleep_seq <- seq(min(data$Sleep_Hours), max(data$Sleep_Hours), length.out = 100)
grid <- expand.grid(Study_Hours = study_seq, Sleep_Hours = sleep_seq)
# Fit model and make predictions
model <- lm(Performance_Score ~ Study_Hours + Sleep_Hours, data = data)
grid$Predicted_Score <- predict(model, newdata = grid)
# Generate heatmap
ggplot(grid, aes(x = Study_Hours, y = Sleep_Hours, fill = Predicted_Score)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Predicted Performance Score",
x = "Study Hours",
y = "Sleep Hours",
fill = "Performance Score") +
theme_minimal()
setwd("C:/JPEM_Git_Main/JPEM")
hist(model$residuals)
#| label: Load Libraries
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(ggpubr)
#| label: Load Data - SAT
#| message: false
#| warning: false
#| include: false
df <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA415/01 Linear Regression/GPA vs SAT.csv")
#| label: Create Model - SAT
#| echo: true
#| message: false
#| warning: false
model <- lm(SAT ~ GPA, data = df)
model$coefficients
summary(model)
hist(model$residuals)
#| label: Visualize
#| echo: true
#| message: false
#| warning: false
# Extract coefficients
intercept <- coef(model)[1]
slope <- coef(model)[2]
# Extract R² value
r_squared <- as.numeric(summary_model$r.squared)
# Extract p-value of GPA
p_value <- summary_model$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("SAT = ", round(intercept, 2), " + ", round(slope, 2), " * GPA")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
df %>%
ggplot(aes(GPA, SAT)) +
geom_point(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 2.5, y = 1400, label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 2.5, y = 1350, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 2.5, y = 1300, label = p_text, color = "blue", hjust = 0) +
labs(
title = "GPA vs SAT",
x = "GPA",
y = "SAT"
) +
theme_bw()
#| label: Load Data - House
#| message: false
#| warning: false
#| include: false
data <- read_csv("C:/Users/jason/OneDrive/SAIT/SAIT Instructor/2025-2026/SPRING 2025 - COURSE - DATA415/01 Linear Regression/RealEstate Size vs Price.csv")
#| label: Create Model - House
#| echo: true
#| message: false
#| warning: false
model2 <- lm(price ~ size, data = data)
model2$coefficients
summary(model2)
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(summary_model2$r.squared)
# Extract p-value for Size
p_value <- summary_model2$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "House Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
#| label: Create Model - House
#| echo: true
#| message: false
#| warning: false
model2 <- lm(price ~ size, data = data)
model2$coefficients
summary(model2)
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(model2$r.squared)
# Extract p-value for Size
p_value <- model2$coefficients[2, 4]
#| label: Visualize - House
#| echo: true
#| message: false
#| warning: false
# Extract coefficients
intercept <- coef(model2)[1]
slope <- coef(model2)[2]
# Extract R² value
r_squared <- as.numeric(model2$r.squared)
# Extract p-value for Size
p_value <- summary(model2)$coefficients[2, 4]
# Create annotation texts
eq_text <- paste0("Price = ", round(intercept, 2), " + ", round(slope, 2), " * Size")
r2_text <- paste0("R² = ", round(r_squared, 3))
p_text <- paste0("p-value = ", format(p_value, scientific = TRUE))
# Generate plot with annotations
data %>%
ggplot(aes(size, price)) +  # Corrected aesthetics
geom_jitter(color = "red") +
geom_smooth(method = lm, se = FALSE, color = "black") +
annotate("text", x = 250, y = 5e+05 , label = eq_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.8e+05, label = r2_text, color = "blue", hjust = 0) +
annotate("text", x = 250, y = 4.6e+05, label = p_text, color = "blue", hjust = 0) +
labs(
title = "House Size vs Price",
x = "Size",
y = "Price"
) +
theme_bw()
